package com.mehmetselman.socialmediaproject.repository;

import com.mehmetselman.socialmediaproject.entity.Token;
import com.mehmetselman.socialmediaproject.entity.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.List;

/**
 * âœ… TokenRepository
 *
 * Bu repository, JWT token'larÄ±nÄ± (kullanÄ±cÄ± oturumlarÄ±nÄ±) yÃ¶netmek iÃ§in kullanÄ±lÄ±r.
 *
 * Spring Data JPA sayesinde CRUD iÅŸlemleri otomatik olarak saÄŸlanÄ±r.
 *
 * Ek olarak:
 *  - Token'Ä± string deÄŸerine gÃ¶re arama
 *  - Belirli bir kullanÄ±cÄ±ya ait tÃ¼m token'larÄ± listeleme
 *  - Belirli bir kullanÄ±cÄ±nÄ±n tÃ¼m token'larÄ±nÄ± silme
 */
@Repository
public interface TokenRepository extends JpaRepository<Token, Long> {

    /**
     * ğŸ”¹ Belirli bir token string'ine gÃ¶re token nesnesini dÃ¶ner.
     *
     * @param token Aranan token string'i
     * @return Token nesnesi veya null
     */
    Token findByToken(String token);

    /**
     * ğŸ”¹ Belirli bir kullanÄ±cÄ±ya ait tÃ¼m token kayÄ±tlarÄ±nÄ± dÃ¶ner.
     *
     * @param user Tokenâ€™larÄ± alÄ±nacak kullanÄ±cÄ±
     * @return Token listesi
     */
    List<Token> findByUser(User user);

    /**
     * ğŸ”¹ Belirli bir kullanÄ±cÄ±ya ait tÃ¼m token'larÄ± siler.
     *
     * KullanÄ±cÄ± logout olduÄŸunda veya yeniden login olduÄŸunda Ã§aÄŸrÄ±lÄ±r.
     *
     * @param user Tokenâ€™larÄ± silinecek kullanÄ±cÄ±
     */
    void deleteAllByUser(User user);
}
