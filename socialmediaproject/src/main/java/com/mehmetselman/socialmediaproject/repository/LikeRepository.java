package com.mehmetselman.socialmediaproject.repository;

import com.mehmetselman.socialmediaproject.entity.Like;
import com.mehmetselman.socialmediaproject.entity.Post;
import com.mehmetselman.socialmediaproject.entity.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

/**
 * âœ… LikeRepository
 *
 * Bu repository, kullanÄ±cÄ±larÄ±n gÃ¶nderilere yaptÄ±ÄŸÄ± beÄŸenme (Like) iÅŸlemlerini yÃ¶netir.
 *
 * `JpaRepository` sayesinde CRUD iÅŸlemleri (create, read, update, delete) otomatik olarak saÄŸlanÄ±r.
 *
 * Ek olarak:
 *  - Belirli bir kullanÄ±cÄ± bir gÃ¶nderiyi beÄŸenmiÅŸ mi kontrol edilebilir.
 *  - KullanÄ±cÄ±nÄ±n belirli bir gÃ¶nderi Ã¼zerindeki Like nesnesi bulunabilir.
 */
@Repository
public interface LikeRepository extends JpaRepository<Like, Long> {

    /**
     * ğŸ”¹ KullanÄ±cÄ±nÄ±n belirli bir gÃ¶nderiyi beÄŸenip beÄŸenmediÄŸini kontrol eder.
     *
     * @param user KullanÄ±cÄ± nesnesi
     * @param post GÃ¶nderi nesnesi
     * @return true â†’ kullanÄ±cÄ± gÃ¶nderiyi beÄŸenmiÅŸ, false â†’ beÄŸenmemiÅŸ
     */
    boolean existsByUserAndPost(User user, Post post);

    /**
     * ğŸ”¹ Belirli bir kullanÄ±cÄ± ile gÃ¶nderi arasÄ±ndaki Like kaydÄ±nÄ± dÃ¶ner.
     *
     * @param user KullanÄ±cÄ± nesnesi
     * @param post GÃ¶nderi nesnesi
     * @return Like nesnesi (varsa), aksi halde null
     */
    Like findByUserAndPost(User user, Post post);
}
